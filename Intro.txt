Rev Eng.

-Common Tools-

>VMs
>Sandboxes
>Unpackers
>Disassemblers
>Debuggers
Fusable.com
//


-Common Techniques-
>User Mode Debuggers
>SoftIce
>Ollydbg
>Ghidra
>SysInternals Suite
>Tripwire
>Isof
>Wireshark
>Rever Win32 w/ IDA Pro
>Rever Stacks
>Rever Heaps
>Rev Data Structures
>Structured Exception Handling
>Rever System level
>Revers Bots
>Rev Infection Vectors
>Encoders and Compressors
>Auditing Binaries
>Binary Diffing
>Rev Encryption
>Detecting Debuggers and Disassemblers

-Snippets-

>Shamoon
>Upclicker
>Nuclear Exploit Kits
>HiKit
>Hacking Team (Italy.LTD)
>Vault7 (See eye a)


-ASM Types-
>x86
>x64
>ARM
>PPC
>...

//Process
Usually broken down into at least two reversing proceedures: Code Level & System Level.

>CODELEVEL<
It aims to extract code concepts and algorithms from the machine code of the malware.
Requires understanding of the particular Central Processing Unit, Operating Systems and Development process through tools like: IDA Pro, SoftIce, Ollydbg and Ghidra.


>SYSTEMLEVEL<
Aims to sniff, monitor and analyse how the operating system reacts by inspecting the executables or tracking its inputs/outputs through tools like: SysInternals Suite, Tripwire, Isof and Wireshark.


//Definitions

>Disassemblers generate assembly code for a selected program

>Debuggers observe the program at run time and can set breakpoints and code trace

>Decompilers attempt to recreate the source code of a selected program in a high level language though accuracy may be limited and lines ommited




